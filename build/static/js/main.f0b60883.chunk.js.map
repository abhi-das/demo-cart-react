{"version":3,"sources":["components/mainNav/MainNav.jsx","components/counter/Counter.jsx","components/counters/Counters.jsx","App.js","serviceWorker.js","components/Notfound/Notfound.jsx","index.js"],"names":["MainNav","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","exact","activeClassName","to","this","props","totalItem","onClick","onReset","Component","Counter","_this","src","countAttr","img","alt","getBadgeStyles","formatCount","onIncrement","onDecrement","onDelete","count","styles","Counters","counters","map","eleProp","components_counter_Counter","key","onDel","onInc","onDec","App","state","handleDelete","currentProd","fltCounter","filter","prod","setState","handleIncrement","cProd","cnt","Object","toConsumableArray","currentProdIdx","indexOf","handleReset","vl","handleDecrement","idx","Fragment","mainNav_MainNav","itm","length","counters_Counters","Boolean","window","location","hostname","match","NotFound","appRouting","BrowserRouter","Switch","Route","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0b60883.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass MainNav extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" href=\"/\">SHOPPY</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" \r\n                        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" exact activeClassName=\"active\" to=\"/\">Home</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/men\">Men</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/women\">Women</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/kids\">Kids</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"pull-right\">\r\n                    <span className=\"badge badge-sm badge-primary\">{ this.props.totalItem }</span>\r\n                    <span><i className=\"fa fa-shopping-cart fa-2x\"></i></span>\r\n                    <button className=\"btn btn-sm btn-danger m-2\" onClick={ this.props.onReset }><i className=\"fa fa-trash\"></i></button>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainNav;","import React, { Component } from 'react';\r\n\r\nimport './Counter.css';\r\n\r\nclass Counter extends Component {\r\n    \r\n    render() {\r\n        // console.log(this.props);\r\n        return (\r\n            <div className=\"col-3 product-container\">\r\n                <div className=\"prod-img m-3\">\r\n                    <img src={this.props.countAttr.img} alt=\"product\"/>\r\n                </div>\r\n                <span className={ this.getBadgeStyles() }>{ this.formatCount() }</span>\r\n                <button className=\"btn btn-light btn-sm\"\r\n                    onClick={ () => this.props.onIncrement(this.props.countAttr) }>Add</button>\r\n                <button className=\"btn btn-light btn-sm m-2\"\r\n                    onClick={ () => this.props.onDecrement(this.props.countAttr) }>Reduce</button>\r\n                <button className=\"btn btn-danger btn-sm m-2\"\r\n                    onClick={ () => this.props.onDelete(this.props.countAttr) }><i className=\"fa fa-trash\"></i></button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    formatCount() {\r\n        const { count } = this.props.countAttr;\r\n        return ( count === 0 ) ? 'Zero' : count;\r\n    }\r\n\r\n    getBadgeStyles() {\r\n        const { count } = this.props.countAttr;\r\n        let styles = \"badge m-2 badge-\";\r\n        return ( count === 0 ) ? styles += \"warning\" : styles +=\"primary\";\r\n    }\r\n}\r\n\r\nexport default Counter;","import React, { Component } from 'react';\r\n\r\nimport Counter from '../counter/Counter';\r\n\r\nclass Counters extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"call-to-action container\">\r\n                <div className=\"row\">\r\n                    {\r\n                        this.props.counters.map( eleProp => \r\n                            <Counter key={ eleProp.id } countAttr={ eleProp } \r\n                            onDelete={ this.props.onDel } \r\n                            onIncrement={ this.props.onInc } \r\n                            onDecrement={ this.props.onDec } />\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counters;","import React, { Component } from 'react';\nimport './App.css';\n\nimport MainNav from './components/mainNav/MainNav';\nimport Counters from './components/counters/Counters';\n\nclass App extends Component {\n\n  state = {\n    counters: [\n        { id: 1, count: 4, img: 'https://picsum.photos/200?image=0' },\n        { id: 2, count: 0, img: 'https://picsum.photos/200?image=42'},\n        { id: 3, count: 0, img: 'https://picsum.photos/200?image=53'},\n        { id: 4, count: 0, img: 'https://picsum.photos/200?image=74'},\n        { id: 5, count: 0, img: 'https://picsum.photos/200?image=32'},\n        { id: 6, count: 0, img: 'https://picsum.photos/200?image=21'}\n    ]\n  };\n\n  handleDelete = ( currentProd ) => {\n    const fltCounter = this.state.counters.filter( prod => prod.id !== currentProd.id );\n    this.setState({ counters: fltCounter });\n  }\n\n  handleIncrement = ( cProd ) => {\n    let cnt = [ ...this.state.counters ];\n    let currentProdIdx = cnt.indexOf( cProd );\n    if( cnt[currentProdIdx]['count'] < 8 ) { cnt[currentProdIdx]['count'] +=  1 };\n    this.setState({ counters : cnt });\n    // console.log(this.state);\n  }\n\n  handleReset = () => {\n\n    const counters = this.state.counters.map( vl => {\n        vl.count = 0;\n        return vl;\n    });\n\n    this.setState({ counters });\n  }\n\n  handleDecrement = ( cProd ) => {\n\n    let cnt = [ ...this.state.counters ];\n    let idx = cnt.indexOf( cProd );\n    if(cnt[idx]['count'] > 0)  { cnt[idx]['count'] -= 1 };\n    this.setState({ counters : cnt });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <MainNav totalItem={ this.state.counters.filter( itm =>  itm.count > 0 ).length } onReset={ this.handleReset }/>\n        <main className=\"App\">\n          <Counters\n            counters={ this.state.counters }\n            onDel={ this.handleDelete }\n            onInc={ this.handleIncrement } \n            onDec={ this.handleDecrement } />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <h2>Page Not Found 404!</h2>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Switch, Route, BrowserRouter as Router} from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nimport NotFound from './components/Notfound/Notfound';\n\nconst appRouting = (\n    <Router>\n        \n        <Switch>\n            <Route exact path=\"/\" component={ App } />\n            <Route path=\"/men\" component={ App }/>\n            <Route path=\"/women\" component={ App } />\n            <Route path=\"/kids\" component={ App } />\n            <Route component={ NotFound } />\n        </Switch>\n        \n    </Router>\n);\n\nReactDOM.render(appRouting, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}