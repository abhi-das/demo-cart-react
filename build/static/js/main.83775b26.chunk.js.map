{"version":3,"sources":["components/mainNav/MainNav.jsx","components/counter/Counter.jsx","components/counters/Counters.jsx","App.js","serviceWorker.js","components/Notfound/Notfound.jsx","index.js"],"names":["MainNav","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","exact","activeClassName","to","process","this","props","totalItem","onClick","onReset","Component","Counter","_this","src","countAttr","img","alt","getBadgeStyles","formatCount","onIncrement","onDecrement","onDelete","count","styles","Counters","counters","map","eleProp","components_counter_Counter","key","onDel","onInc","onDec","App","state","handleDelete","currentProd","fltCounter","filter","prod","setState","handleIncrement","cProd","cnt","Object","toConsumableArray","currentProdIdx","indexOf","handleReset","vl","handleDecrement","idx","Fragment","mainNav_MainNav","itm","length","counters_Counters","Boolean","window","location","hostname","match","NotFound","appRouting","BrowserRouter","Switch","Route","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83775b26.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass MainNav extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>            \r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <a className=\"navbar-brand\" href=\"/\">SHOPPY</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" \r\n                            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" exact activeClassName=\"active\" to={process.env.PUBLIC_URL + \"/\"}>Home</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" activeClassName=\"active\" to={process.env.PUBLIC_URL + \"/men\"}>Men</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" activeClassName=\"active\" to={process.env.PUBLIC_URL + \"/women\"}>Women</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" activeClassName=\"active\" to={process.env.PUBLIC_URL + \"/kids\"}>Kids</NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"pull-right\">\r\n                    <span className=\"badge badge-sm badge-primary\">{ this.props.totalItem }</span>\r\n                    <span><i className=\"fa fa-shopping-cart fa-2x\"></i></span>\r\n                    <button className=\"btn btn-sm btn-danger m-2\" onClick={ this.props.onReset }><i className=\"fa fa-trash\"></i></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainNav;","import React, { Component } from 'react';\r\n\r\nimport './Counter.css';\r\n\r\nclass Counter extends Component {\r\n    \r\n    render() {\r\n        // console.log(this.props);\r\n        return (\r\n            <div className=\"col-sm-6 col-md-3 product-container\">\r\n                <div className=\"prod-img m-3\">\r\n                    <img src={this.props.countAttr.img} alt=\"product\"/>\r\n                </div>\r\n                <span className={ this.getBadgeStyles() }>{ this.formatCount() }</span>\r\n                <button className=\"btn btn-light btn-sm\"\r\n                    onClick={ () => this.props.onIncrement(this.props.countAttr) }>Add</button>\r\n                <button className=\"btn btn-light btn-sm m-2\"\r\n                    onClick={ () => this.props.onDecrement(this.props.countAttr) }>Reduce</button>\r\n                <button className=\"btn btn-danger btn-sm m-2\"\r\n                    onClick={ () => this.props.onDelete(this.props.countAttr) }><i className=\"fa fa-trash\"></i></button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    formatCount() {\r\n        const { count } = this.props.countAttr;\r\n        return ( count === 0 ) ? 'Zero' : count;\r\n    }\r\n\r\n    getBadgeStyles() {\r\n        const { count } = this.props.countAttr;\r\n        let styles = \"badge m-2 badge-\";\r\n        return ( count === 0 ) ? styles += \"warning\" : styles +=\"primary\";\r\n    }\r\n}\r\n\r\nexport default Counter;","import React, { Component } from 'react';\r\n\r\nimport Counter from '../counter/Counter';\r\n\r\nclass Counters extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"call-to-action container\">\r\n                <div className=\"row\">\r\n                    {\r\n                        this.props.counters.map( eleProp => \r\n                            <Counter key={ eleProp.id } countAttr={ eleProp } \r\n                            onDelete={ this.props.onDel } \r\n                            onIncrement={ this.props.onInc } \r\n                            onDecrement={ this.props.onDec } />\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counters;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport MainNav from './components/mainNav/MainNav';\r\nimport Counters from './components/counters/Counters';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    counters: [\r\n        { id: 1, count: 4, img: 'https://picsum.photos/200?image=0' },\r\n        { id: 2, count: 0, img: 'https://picsum.photos/200?image=42'},\r\n        { id: 3, count: 0, img: 'https://picsum.photos/200?image=53'},\r\n        { id: 4, count: 0, img: 'https://picsum.photos/200?image=74'},\r\n        { id: 5, count: 0, img: 'https://picsum.photos/200?image=32'},\r\n        { id: 6, count: 0, img: 'https://picsum.photos/200?image=21'}\r\n    ]\r\n  };\r\n\r\n  handleDelete = ( currentProd ) => {\r\n    const fltCounter = this.state.counters.filter( prod => prod.id !== currentProd.id );\r\n    this.setState({ counters: fltCounter });\r\n  }\r\n\r\n  handleIncrement = ( cProd ) => {\r\n    let cnt = [ ...this.state.counters ];\r\n    let currentProdIdx = cnt.indexOf( cProd );\r\n    if( cnt[currentProdIdx]['count'] < 8 ) { cnt[currentProdIdx]['count'] +=  1 };\r\n    this.setState({ counters : cnt });\r\n    // console.log(this.state);\r\n  }\r\n\r\n  handleReset = () => {\r\n\r\n    const counters = this.state.counters.map( vl => {\r\n        vl.count = 0;\r\n        return vl;\r\n    });\r\n\r\n    this.setState({ counters });\r\n  }\r\n\r\n  handleDecrement = ( cProd ) => {\r\n\r\n    let cnt = [ ...this.state.counters ];\r\n    let idx = cnt.indexOf( cProd );\r\n    if(cnt[idx]['count'] > 0)  { cnt[idx]['count'] -= 1 };\r\n    this.setState({ counters : cnt });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MainNav totalItem={ this.state.counters.filter( itm =>  itm.count > 0 ).length } onReset={ this.handleReset }/>\r\n        <main className=\"App\">\r\n          <Counters\r\n            counters={ this.state.counters }\r\n            onDel={ this.handleDelete }\r\n            onInc={ this.handleIncrement } \r\n            onDec={ this.handleDecrement } />\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <h2>Page Not Found 404!</h2>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Switch, Route, BrowserRouter as Router} from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\n\r\nimport NotFound from './components/Notfound/Notfound';\r\n\r\nconst appRouting = (\r\n    <Router>\r\n        \r\n        <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL + \"/\"} component={ App } />\r\n            <Route path={process.env.PUBLIC_URL + \"/men\"} component={ App }/>\r\n            <Route path={process.env.PUBLIC_URL + \"/women\"} component={ App } />\r\n            <Route path={process.env.PUBLIC_URL + \"/kids\"} component={ App } />\r\n            <Route component={ NotFound } />\r\n        </Switch>\r\n        \r\n    </Router>\r\n);\r\n\r\nReactDOM.render(appRouting, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}